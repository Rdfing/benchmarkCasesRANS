/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
//convertToMeters 1;// if you want to dimensionlized
convertToMeters 0.01;// if you want to keep the unit

//gird number//
XX 4;

A 30;
B 8;
C 20;
D 3;
E 16;
//
F 4;
G 500;
H 20;
I 4;
J 10;
K 11;

//rescale
A #calc "$A*$XX";
B #calc "$B*$XX";
C #calc "$C*$XX";
D #calc "$D*$XX";
E #calc "$E*$XX";
//
F #calc "$F*$XX";
G #calc "$G*$XX";
H #calc "$H*$XX";
I #calc "$I*$XX";
J #calc "$J*$XX";
K #calc "$K*$XX";
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
//geometry 
//define everything in cm and rescale later
//
inletH 2.0;
X1 8;
baffle_L -1; // baffle length in inches
//baffle_L #calc "-($baffle_L-10.75)"; // shift the length


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
vertices
(
   (-16 0 0)
   (0 0 0)
   (0 $inletH 0)
   (-16 $inletH 0)
   (-16 0 7.5)
   (0 0 7.5)
   (0 $inletH 7.5)
   (-16 $inletH 7.5)
	($X1 0 0)
	($X1 $inletH 0)
	($X1 $inletH 7.5)
	($X1 0 7.5)
	($X1 3 0)
	($X1 3 7.5)
	(0 3 7.5)
	(0 3 0)
	(0 $baffle_L 0)
	($X1 $baffle_L 0)
	($X1 $baffle_L 7.5)
	(0 $baffle_L 7.5)
	(0 -9.0 0)
	($X1 -9.0 0)
	($X1 -9.0 7.5)
	(0 -9.0 7.5)
	(10.0 -9.0 0)
	(10.0 -9.0 7.5)
	(10.0 $baffle_L 0)
	(10.0 $baffle_L 7.5)
	(250 -9.0 0)
	(250 -9.0 7.5)
	(250 $baffle_L 0)
	(250 $baffle_L 7.5)
	(250 3.0 0)
	(250 3.0 7.5)
	(10.0 3.0 7.5)
	(10.0 3.0 0)
	(250 7 7.5)
	(250 7 0)
	(10.0 7 0)
	(10.0 7 7.5)
	(250 18.3 7.5)
	(250 18.3 0)
	(10.0 18.3 7.5)
	(10.0 18.3 0)
	(260 8.3 7.5)
	(260 8.3 0)
	(260 7.0 0)
	(260 7.0 7.5)
	($X1 7 0)
	($X1 7 7.5)
	(0 7 7.5)
	(0 7 0)
	($X1 8.3 0)
	($X1 8.3 7.5)
	(0 8.3 7.5)
	(0 8.3 0)
	(250 8.3 7.5)
	(250 8.3 0)
	(10.0 8.3 0)
	(10.0 8.3 7.5)
);

blocks
(
	// 1
   	hex (0 1 2 3 4 5 6 7) ($A $B 1) simpleGrading (1 1 1)
	// 2
	hex (1 8 9 2 5 11 10 6) ($C $B 1) simpleGrading (1 1 1)
	// 3
	hex (16 17 8 1 19 18 11 5) ($C $D 1) simpleGrading (1 1 1)
	// 4 
	hex (20 21 17 16 23 22 18 19) ($C $E 1) simpleGrading (1 1 1)
	// 5
	hex (21 24 26 17 22 25 27 18) ($F $E 1) simpleGrading (1 1 1)
	// 6
	hex (24 28 30 26 25 29 31 27) ($G $E 1) simpleGrading (1 1 1)
	// 7 
	hex (26 30 32 35 27 31 33 34) ($G $J 1) simpleGrading (1 1 1)
	// 8
	hex (35 32 37 38 34 33 36 39) ($G $K 1) simpleGrading (1 1 1)
	// 9
	hex (2 9 12 15 6 10 13 14) ($C $D 1) simpleGrading (1 1 1)
	//10
	hex (15 12 48 51 14 13 49 50) ($C $K 1) simpleGrading (1 1 1)
	// 11
	hex (51 48 52 55 50 49 53 54) ($C $I 1) simpleGrading (1 1 1)	
	// 12
	hex (38 37 57 58 39 36 56 59) ($G $I 1) simpleGrading (1 1 1)	
	// 13
	hex (37 46 45 57 36 47 44 56) ($H $I 1) simpleGrading (1 1 1)
	// 14
	hex (12 35 38 48 13 34 39 49) ($F $K 1) simpleGrading (1 1 1)
	// 15
	hex (48 38 58 52 49 39 59 53) ($F $I 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    top
    {
        type patch;
        faces
        (
			(55 54 53 52)
			(53 59 58 52)
			(59 56 57 58)
			(56 44 45 57)
        );
    }

   inlet
    {
        type mappedPatch;
        offset          (0.07 0 0);
        sampleRegion    region0;
        sampleMode      nearestCell;
        samplePatch     none;
        //type patch;
        faces
        (
			(0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
			(47 46 45 44)
        );
    }
    outerWall
    {
        type wall;
        faces
        (
         (3 2 6 7)
			(6 2 15 14)
			(0 1 5 4)
			(16 1 5 19)
			(20 16 19 23)
			(9 12 13 10)
			(8 9 10 11)
			(17 8 11 18)
			(17 26 27 18)
			(26 35 34 27)
			(13 12 35 34)
			(15 14 50 51)
			(51 50 54 55)
			(29 28 30 31)
			(31 30 32 33)
			(33 32 37 36)
			(36 37 46 47)

        );
    }

    bottomWall
    {
        type wall;
        faces
        (
         (20 21 22 23)
			(21 24 25 22)
			(24 28 29 25)		
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
         (0 3 2 1)
         (4 5 6 7)
			(1 8 9 2)
			(5 11 10 6)
			(2 9 12 15)
			(6 10 13 14)
			(16 17 8 1)
			(19 18 11 5)
			(20 21 17 16)
			(23 22 18 19) 
			(21 24 26 17)
			(22 25 27 18) 
			(24 28 30 26) 
			(25 29 31 27) 
			(26 30 32 35)
			(27 31 33 34) 
			(35 32 37 38)
			(34 33 36 39)	
			(14 13 49 50)
			(15 12 48 51)
			(50 49 53 54)
			(51 48 52 55)
			(49 39 59 53)
			(48 38 58 52)
			(13 34 39 49)
			(12 35 38 48)
			(39 36 56 59)
			(38 37 57 58)
			(36 47 44 56)
			(37 46 45 57)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
